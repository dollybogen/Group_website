[{"content":"Add report queries based on date/type/summary, improve data display, add standard data, and differences Added data display on Bluetooth interface and doctor evaluation system Modified the API documentation and sent it to the system team ","date":"2025-05-06T00:00:00Z","image":"http://localhost:1313/Group_website/p/ui-update/3774ea20720993cc966bb4393a2daab_hu5984957763985251530.png","permalink":"http://localhost:1313/Group_website/p/ui-update/","title":"UI update"},{"content":"\n","date":"2025-04-20T00:00:00Z","image":"http://localhost:1313/Group_website/QQ_1745143860448.png","permalink":"http://localhost:1313/Group_website/p/front-end-demo/","title":"Front end demo"},{"content":"\n","date":"2025-04-20T00:00:00Z","image":"http://localhost:1313/Group_website/p/gantt-chart/26ed0cdc3e4819df0c78d9f924d8bd0_hu17708522253943478542.png","permalink":"http://localhost:1313/Group_website/p/gantt-chart/","title":"Gantt Chart"},{"content":"\n1. Overview This requirements analysis document aims to provide a detailed description of the functionalities and interaction flows of a medical rehabilitation system. The system consists of four main modules: User Interface Module (UI Group), System Core Module (System Group), Data Processing Module (Data Group), and Data Analysis Module (Analysis Group). These modules work together through clear interaction relationships to provide efficient and secure services for patients, doctors, and administrator doctors.\n2. User Roles 2.1 Patient Responsibilities: Use the system to register, log in, view real-time measurement data and feedback results, and adjust rehabilitation training plans based on doctor recommendations. Permissions: Access personal health data. Submit personal information and measurement data. 2.2 Doctor Responsibilities: Manage patient health information, view measurement data, and provide professional advice. Permissions: Access patient-related data. Edit patient basic information. 2.3 AdminDoctor (Administrator Doctor) Responsibilities: Manage doctor account information, maintain doctor data support within the system, and monitor system logs and operational status. Permissions: Full access to doctor and patient data. Modify system configurations and manage the database. 3. Functional Module Division 3.1 UI Group (User Interface Module) Functional Overview The UI Group is responsible for providing the interface for user interaction with the system, including login, registration, patient management, measurement preparation, data display, and result feedback functions, ensuring a user-friendly and intuitive experience.\nDetailed Use Case Expansion UC_Login:\nDescription: Enables patients or doctors to log into the system using a username and password. Preconditions: The user already has an account. Main Flow: The user enters the username and password. The system verifies the credentials. Upon success, the user is redirected to their homepage. Error Handling: Incorrect username or password: Prompt \u0026ldquo;Username or password is incorrect, please re-enter.\u0026rdquo; System unavailable: Prompt \u0026ldquo;The system is temporarily unavailable, please try again later.\u0026rdquo; UC_Register:\nDescription: New users complete registration by filling in basic information. Preconditions: None. Main Flow: The user accesses the registration page. Fills in basic information such as name, contact details, and email. The system verifies the completeness and uniqueness of the information. After successful registration, the user is notified of completion. Error Handling: Incomplete information: Prompt \u0026ldquo;Please fill in all required fields.\u0026rdquo; Email already registered: Prompt \u0026ldquo;This email is already registered, please use another email.\u0026rdquo; UC_PatientManage:\nDescription: Doctors create or search for patient basic information. Preconditions: The doctor is logged into the system. Main Flow: The doctor selects \u0026ldquo;Create Patient\u0026rdquo; or \u0026ldquo;Search Patient.\u0026rdquo; If creating a patient, fills in the patient\u0026rsquo;s basic information and saves it. If searching for a patient, enters keywords (e.g., name or ID) and views the search results. Error Handling: No search results: Prompt \u0026ldquo;No related patient information found.\u0026rdquo; UC_PrepareMeasure:\nDescription: Provides animated guidance to help patients correctly wear sensors and initialize the device. Preconditions: The patient is logged into the system. Main Flow: The patient accesses the measurement preparation page. The page plays an animation to guide the patient in correctly wearing the sensor. The system calls the \u0026ldquo;Initialize Sensor\u0026rdquo; interface to initialize the device. After initialization is complete, the patient is prompted to start the measurement. Error Handling: Device initialization failure: Prompt \u0026ldquo;Device initialization failed, please check the connection.\u0026rdquo; UC_RealTimeDisplay:\nDescription: Displays the real-time joint angle status of the patient. Preconditions: The measurement device has been initialized and started collecting data. Main Flow: The system calls the \u0026ldquo;Get Streaming Data\u0026rdquo; interface to obtain real-time data. The data is processed and displayed in chart form. The patient can view their joint angle changes in real-time. Error Handling: Data stream interruption: Prompt \u0026ldquo;Data stream interrupted, please check the device connection.\u0026rdquo; UC_ResultFeedback:\nDescription: Displays measurement results and professional advice from the doctor to the patient. Preconditions: Measurement is complete, and analysis results have been generated. Main Flow: The system calls the \u0026ldquo;Request Analysis\u0026rdquo; interface to request analysis results. After loading the analysis results, they are displayed on the page. The doctor provides rehabilitation suggestions based on the results. Error Handling: Analysis result loading failure: Prompt \u0026ldquo;Result loading failed, please try again later.\u0026rdquo; UC_DoctorInfoManage:\nDescription: Administrator doctors edit and manage doctor information. Preconditions: The administrator doctor is logged into the system. Main Flow: The administrator doctor accesses the information management page. Selects the doctor information that needs editing. Modifies the information and saves it. Error Handling: Insufficient permissions: Prompt \u0026ldquo;You do not have permission to perform this operation.\u0026rdquo; 3.2 System Group (System Core Module) Functional Overview The System Group serves as the core part of the system, coordinating interactions between different modules, including but not limited to data storage, logging, data collection, and uploading operations, ensuring the stable operation and efficient data processing capability of the system.\nDetailed Use Case Expansion UC_CICD: Data support services for doctors. UC_API: Secure storage of user information. UC_Log: Monitoring and recording system logs. UC_UItoDataCollect: Transition to data collection after measurement preparation. UC_UItoDataUpload: Uploading real-time data to the server. UC_UItoDBManage: Synchronizing analysis results to the database. UC_UItoAnalysis: Connecting feedback pages with analysis modules. 3.3 Data Group (Data Processing Module) Functional Overview The Data Group focuses on data collection, cleaning, storage, and management, ensuring that the data entering the system is clean and useful.\nDetailed Use Case Expansion UC_DataCollect: Collecting data from sensors. UC_DataUpload: Uploading collected data to the server. UC_DataClean: Cleaning and interpolating raw data. UC_CRUD: Basic database operations (Create, Read, Update, Delete). UC_DBManage: Managing database information to ensure consistency and security. 3.4 Analysis Group (Data Analysis Module) Functional Overview The Analysis Group is dedicated to conducting in-depth analysis of sensor data, identifying deviations and anomalies, and generating structured feedback results.\nDetailed Use Case Expansion UC_ReceiveData: Receiving cleaned sensor data. UC_Analysis: Performing deviation analysis and anomaly tagging. UC_ResultReturn: Returning analyzed results to the feedback page. 4. System Integration and Workflow Data Flow Description The system revolves around the flow of data, from sensor-wearing by patients to data collection, uploading, cleaning, analysis, and finally feeding back the results to patients and doctors.\nUser Interaction Workflow Patient Perspective: Register/login → Prepare measurements → View real-time data → Receive professional advice. Doctor Perspective: Manage patients → Use data support services → Provide rehabilitation guidance. Error Handling Mechanism The system incorporates multiple error handling mechanisms, providing clear prompts and minimizing impact when issues arise, covering scenarios like user input errors, device malfunctions, and data transmission interruptions.\n","date":"2025-04-19T00:00:00Z","image":"http://localhost:1313/Group_website/p/requirements-analysis-document/82a91b497a6f922b0aff3b2d50559b5_hu14605638577421157810.png","permalink":"http://localhost:1313/Group_website/p/requirements-analysis-document/","title":"Requirements Analysis Document"},{"content":"\nClick to download up_csv.vue file\nClick to download up_onedata.vue file\n","date":"2025-04-14T00:00:00Z","image":"http://localhost:1313/Group_website/p/bluetooth-front-end-demo-implementation/c7c78bc9f6235a624b295a87049b1bb_hu365379673566781473.png","permalink":"http://localhost:1313/Group_website/p/bluetooth-front-end-demo-implementation/","title":"Bluetooth front-end demo implementation"},{"content":"\nThe API is too broad, so it is simply written as\u0026rsquo; storing user information \u0026lsquo;. Collecting and registering basic information for the UI group can be achieved through a database, while other information depends on the data group and algorithm group\nRemove \u0026ldquo;real-time\u0026rdquo; feedback\nInternal arrows indicate data support for the next function\nDoctor administrator adds another function: modification of doctor basic information\nCall is a supplementary explanation when called, and translation issues cannot be used to create new instances\nAdd a patient\u0026rsquo;s feedback: Connect a wire from the patient to the feedback interface\nConnect the patient management page to CI/CD\nThe third-party service is currently unavailable and has been deleted\nCI/CD stands for Continuous Integration/Continuous Delivery\nInclude means to call, extend means to be implemented\nThe System Performance Optimization case has been deleted\n","date":"2025-04-14T00:00:00Z","image":"http://localhost:1313/Group_website/p/change-of-demand-summary-diagram/09f3c7788a6c7352cd5258dabd4d8c8_hu692719060259620346.png","permalink":"http://localhost:1313/Group_website/p/change-of-demand-summary-diagram/","title":"Change of demand summary diagram"},{"content":"\n","date":"2025-04-14T00:00:00Z","image":"http://localhost:1313/Group_website/p/process-diagram-design/bd44437034e12182ed41b094f4f15af_hu16627969009929021827.png","permalink":"http://localhost:1313/Group_website/p/process-diagram-design/","title":"Process diagram design"},{"content":"\n","date":"2025-04-10T00:00:00Z","image":"http://localhost:1313/Group_website/p/requirement-summary-diagram/666275d71b0fb62d6cd23826dfd5040_hu6542860383591965329.png","permalink":"http://localhost:1313/Group_website/p/requirement-summary-diagram/","title":"requirement summary diagram"},{"content":"\nInternal Requirements Analysis Document 1. Overview This document provides a detailed description of the specific responsibilities, requirements, and interactions among the various teams (UI, System, Data, Analysis), ensuring smooth project progression and promoting effective communication and collaboration among team members.\n2. Team Responsibilities Overview 2.1 UI Team Main Responsibilities:\nLogin Page: Provide a secure login interface for patients and doctors. Login Form: Username/password fields; consider using phone number + verification code mode. Registration Information Function: Collect basic patient information, including but not limited to name, gender, and age. Patient Management Page: Enable doctors to view and manage their list of patients and their basic information. Features include creating new patients and a search bar supporting multi-criteria queries (e.g., patient name, ID, surgery type, etc.). Measurement Preparation Page: Guide users on proper sensor placement through animated demonstrations. Real-Time Data Display Page: Show lower limb movement status, including angle changes. Result Feedback Page: Analyze measurement results using advanced algorithms and provide immediate rehabilitation suggestions. 2.2 System Team Main Responsibilities:\nBuild \u0026amp; Deployment Process: Implement automated CI/CD processes to enhance development efficiency and system stability. Third-Party Service Integration: Evaluate, select, and integrate suitable third-party services for the project. Collaborative Database Development: Work with the Data Team to review database design proposals and optimize performance. API Design \u0026amp; Implementation: Define API standards, implement all backend API functionalities, and generate comprehensive API documentation. Performance Optimization: Conduct regular performance testing, identify bottlenecks, and implement solutions. Security Assurance: Implement user authentication mechanisms, encrypt sensitive data for storage and transmission. Monitoring \u0026amp; Logging System: Design key monitoring metrics and implement a comprehensive log collection mechanism. 2.3 Data Team Main Responsibilities:\nData Module: Cover all processes from device startup to data analysis. Data Collection: Initialize sensors and start data acquisition. Data Upload: Upload collected data to the cloud. Data Cleaning \u0026amp; Filtering: Set reasonable joint angle thresholds to remove abnormal data; use linear interpolation to compensate for missing values. Database CRUD Operations: Perform Create, Read, Update, and Delete operations on patient rehabilitation data. Database Management: Responsible for database schema design, version management, and data migration. 2.4 Analysis Team Main Responsibilities:\nReceive Raw Data: Obtain pre-processed sensor data from the Data Team. Deviation Analysis \u0026amp; Anomaly Labeling: Filter invalid sensor IDs, remove outliers, compute sliding window averages, and determine whether values exceed standard thresholds. Structured Result Return: Send analysis results in JSON format to the Data Team for storage, and push real-time results to the UI Team. 3. Team Interaction Details 3.1 Data Team \u0026amp; Analysis Team Data Transmission Process:\nData Team: Collects motion data from rehabilitation devices (e.g., timestamps, sensor IDs, angle information) and transfers it to the Analysis Team via API. Data Format Requirements: Must conform to a specific format (e.g., collection_time, sensor_id, pitch_angle, roll_angle). Data Quality Requirements: Sampling frequency ≥ 5Hz; daily data loss rate \u0026lt; 10%. Analysis Team: Processes received data (e.g., filter invalid IDs, remove outliers), calculates sliding window averages, determines threshold violations, and marks anomalies. 3.2 Analysis Team \u0026amp; UI Team Real-Time Feedback \u0026amp; Visualization:\nAnalysis Team: Sends real-time analysis results to the UI Team every second via HTTP GET (endpoint: /api/realtime). UI Team: Generates user-friendly charts and reports based on the received data to assist doctors in making informed decisions. Features include creating new records, generating visual reports, and accessing historical analyses. 3.3 System Team \u0026amp; Other Teams Build \u0026amp; Deployment Process:\nSystem Team: Provides CI/CD configuration files, deployment scripts, and documentation to ensure all teams can deploy their code smoothly. Other Teams: Use the provided tools for code deployment. Third-Party Service Integration:\nSystem Team: Evaluates, selects, and integrates suitable third-party services and provides standardized interfaces. UI \u0026amp; Analysis Teams: Use third-party service interfaces encapsulated by the System Team. Collaborative Database Development:\nSystem Team: Designs data access layers and optimizes database performance. Data Team: Designs the database schema, manages versions, and handles migrations. Joint Review: Regularly sync development progress and issues to ensure database consistency. API Design \u0026amp; Implementation:\nSystem Team: Establishes API standards, implements all backend APIs, and generates documentation (e.g., Swagger/OpenAPI). Other Teams: Participate in discussions on API specifications and use the documented APIs in development. 3.4 UI Team \u0026amp; Other Teams Measurement Preparation Page:\nUI Team: Guides users with animation on sensor placement and provides prompts and a \u0026ldquo;Start Measurement\u0026rdquo; button. Data Team: Initializes sensors and begins data acquisition. Real-Time Data Display Page:\nUI Team: Displays lower limb movement, including angle changes (e.g., 3D model simulations and numeric display of current joint angles). Data Team: Provides the real-time data stream. Result Feedback Page:\nUI Team: Shows analysis results and provides real-time rehabilitation suggestions using advanced algorithms. Analysis Team: Supplies analysis reports, summarizing recent rehabilitation progress and issues. 4. Detailed Requirements 4.1 Data Format Requirements Field Descriptions:\ncollection_time: Timestamp of data collection, accurate to the second. sensor_id: Sensor identifier, format like left_1 or right_2. pitch_angle: Forward/backward swing angle, range [-90°, 90°]. roll_angle: Left/right tilt angle, range [-180°, 180°]. 4.2 Data Quality Requirements Sampling Frequency: ≥ 5Hz, with ±30% variation allowed. Completeness: Daily data loss rate \u0026lt; 10%, missing data should be marked with \u0026quot;error_type\u0026quot;: \u0026quot;missing\u0026quot;. 4.3 Performance Optimization Involved Team: System Team\nDescription:\nRegularly conduct performance tests to identify and resolve bottlenecks. Collaborate with the Data Team to optimize database performance and adjust system architecture if necessary. 4.4 Security Assurance Involved Team: System Team\nDescription:\nDefine system security policies and standards, implement user authentication mechanisms. Encrypt sensitive data for storage and transmission, conduct regular security audits and vulnerability scans. 4.5 Monitoring \u0026amp; Logging System Involved Team: System Team\nDescription:\nDesign key monitoring metrics and implement a comprehensive logging mechanism. Configure appropriate alerting rules and create intuitive visualization dashboards. ","date":"2025-04-08T00:00:00Z","image":"http://localhost:1313/Group_website/p/website-update-log-2/02227-2559485279-best-_hu3094765077789940008.png","permalink":"http://localhost:1313/Group_website/p/website-update-log-2/","title":"Internal Requirements Analysis Document"},{"content":"Click to download Excel file\n","date":"2025-04-08T00:00:00Z","image":"http://localhost:1313/Group_website/bfa716fb67d4d01aae4393a7de1d4effc73b6ba2.png","permalink":"http://localhost:1313/Group_website/p/ui-requirement-components/","title":"UI Requirement Components"},{"content":"Module-wise Requirement Analysis Documentation Patient UI Requirements Analysis Login Page Function: Ensures only authorized patients can access the system.\nElement:\nLogin form: Enter username and password fields. Doctor UI Requirements Analysis 1. Login Page Function: Ensure that only authorized doctors can access the system.\nElement:\nLogin form: Enter username and password fields. 2. Patient Management Page Function: Manage and view the list of patients you are responsible for and their basic information.\nElement:\nCreate Patient: Create a new patient. Search bar: Quickly find a specific patient. 3. Patient Details Page Function: In-depth review of each patient\u0026rsquo;s detailed health information and recovery progress, store user\u0026rsquo;s historical records and data analysis results, and generate visual reports based on historical records.\nElement:\nPatient card: Each card contains the patient\u0026rsquo;s photo, name, age, latest recovery progress, and lists underlying diseases, allergy history, etc. Storing history records: Used to obtain history records. Create new records: Used for subsequent new data generation. Obtain visual reports and historical analysis: Generate visual information such as charts, comparative analysis, etc., based on rehabilitation data in the historical records to assist doctors in decision-making. 4. Measurement Preparation Page Function: The user wears the sensor correctly and enters the measurement mode.\nElement:\nAnimation Demonstration: A simple animation diagram shows how to correctly fix the sensor on the lower limb joint. Tips: Brief text description of wearing points and precautions. Start Button: Large, obvious \u0026ldquo;Start Measuring\u0026rdquo; button. 5. Real-time Data Display Page Function: Real-time display of lower limb movement status, including angle changes, etc.\nElement:\n3D model: Simulates lower limb movement and intuitively reflects the angle of the current movement. Numerical display area: Displays the specific value of the current joint angle. 6. Result Feedback Page Function: Analyzes measurement result data using advanced algorithms and provides immediate rehabilitation recommendations.\nElement:\nSuggestions: If the expected goal is not achieved, provide suggestions or adjust the plan. The suggestions come from the doctor combined with the measurement results. Data analysis report: Summarizes recent rehabilitation achievements and existing problems. Recovery progress chart: Shows the patient\u0026rsquo;s recovery progress. 7. Database Comparison Function: Provide a standard database for medical staff to compare data.\n","date":"2025-03-31T00:00:00Z","image":"http://localhost:1313/Group_website/p/module-wise-requirement-analysis-documentation/%E5%9B%BE%E7%89%876_hu4574847731539036616.png","permalink":"http://localhost:1313/Group_website/p/module-wise-requirement-analysis-documentation/","title":"Module-wise requirement analysis  documentation"},{"content":"I have uploaded the Module wise requirement analysis documentation page\nThe modification of the Gantt chart has failed. The message contains markdown encoding, making it impossible to draw the Gantt chart and use the HTML plugin\nThe transformation of the external Gantt chart failed. The external HTML is global code, and modifying it would result in manually crossing the Gantt chart every time it is clicked, which is unacceptable\n","date":"2025-03-31T00:00:00Z","image":"http://localhost:1313/Group_website/p/website-update-log-2/02227-2559485279-best-_hu3094765077789940008.png","permalink":"http://localhost:1313/Group_website/p/website-update-log-2/","title":"Website update log-2"},{"content":"Replace all text on the website with Chinese\nAdd Gantt chart in the bottom right corner, click to enlarge\nUpload two documents: Project Use Case Diagram and Module Division, and Analysis of Patient UI Requirements\nAdded team member introduction, click on the details of the team members on the member page to view\n","date":"2025-03-26T00:00:00Z","image":"http://localhost:1313/Group_website/e7037b88f726314190e4c31d32139470245f14a1.png","permalink":"http://localhost:1313/Group_website/p/website-update-log-1/","title":"Website update log-1"},{"content":"Analysis of Patient UI Requirements 1. Device Pairing Page Function:\nGuide users to complete Bluetooth pairing between sensors and mobile devices.\nElements:\nTitle Bar: Display \u0026ldquo;Device Pairing\u0026rdquo;. Step Indicator: Show the different steps of the pairing process (e.g., turning on Bluetooth, selecting a device, completing pairing). Buttons: Include \u0026ldquo;Refresh Device List\u0026rdquo; and \u0026ldquo;Start Pairing\u0026rdquo;. 2. Measurement Preparation Page Function:\nGuide users to correctly wear sensors and enter measurement mode.\nElements:\nAnimation Demonstration: Show how to correctly fix the sensor on the lower limb joint using simple animated illustrations. Reminder: Short text explanation of wearing instructions and precautions. Start Button: A large and prominent \u0026ldquo;Start Measurement\u0026rdquo; button. 3. Real-Time Data Display Page Function:\nReal-time display of lower limb movement status, including angle changes, etc.\nElements:\n3D Model: Simulate lower limb movements and visually reflect the angle of the current action. Value Display Area: Show the specific value of the current joint angle. Trend Chart: Display the recent trend of angle changes in the form of a line chart. 4. Results Feedback Page Function:\nProvide instant feedback based on measurement results.\nElements:\nScoring System: Score the effectiveness of this training based on rehabilitation criteria. Suggestion Tip: If the expected goals are not achieved, provide suggestions or adjustment plans. Share Button: Allow users to easily share the results of this training with medical personnel. 5. History Page Function:\nView all past measurement records.\nElements:\nTimeline View: Arrange all historical records by date. Quick Preview: Click on any record to view detailed data and feedback for that training session. ","date":"2025-03-24T00:00:00Z","image":"http://localhost:1313/Group_website/p/analysis-of-patient-ui-requirements/%E5%9B%BE%E7%89%871_hu3699562289774027503.png","permalink":"http://localhost:1313/Group_website/p/analysis-of-patient-ui-requirements/","title":"Analysis of Patient UI Requirements"},{"content":"Project Milestone Plan Milestone 1: Requirement Definition and Framework Design (1 week) Core Task: Complete a dual-dimensional user profile of medical personnel/patients (including interview records) Determine which data needs to be analyzed as input Deliverables: User Requirements Document Input Requirement Document Milestone 2: Prototype Development of Core Interface (1 week) Core Task: Determine the interface interaction logic and the framework of each interface Deliverables: Interaction Design Manual Interface Draft Milestone 3: High-Fidelity Design System Construction (2 weeks) Core Task: Create a medical-grade color system (compliant with HIPAA visualization standards) Develop a dynamic data component library (extensible D3.js chart template) Deliverables: High-Fidelity Design Draft (Figma file) Design System Documentation (including Dark Mode specification) Milestone 4: Development Collaboration and Delivery (3 weeks) Core Task: Develop UI interface system Implement design review workflow (Storybook integration) Build a sensor data simulator (simulating 20 pathological state data) Create a design handover document (including variable naming conventions) Deliverables: Development-Ready Resource Package (SVG/PDF specification sheet) User Testing Video Recording ","date":"2025-03-24T00:00:00Z","image":"http://localhost:1313/Group_website/%E7%8F%8A%E7%91%9A%E5%AE%AB%E5%BF%83%E6%B5%B7-111411626.png","permalink":"http://localhost:1313/Group_website/p/ui-design-milestone-plan/","title":"Project Use Case Diagram and Module Division"},{"content":"Our Project Use Case Diagram Our team aims to divide the entire system into the following six core modules. We have chosen to work on the Recovery Analysis \u0026amp; Prediction Module.\nMain Functions and Key Technologies 1. Data Collection Module Functions:\nReal-time collection of lower limb motion data using angle sensors (e.g., MPU-6050) Data transmission to the mobile device via Bluetooth Low Energy (BLE) Sensor data preprocessing (data formatting, time synchronization, etc.) Key Technologies:\nHardware interfaces (I2C/SPI for MEMS sensor data retrieval) BLE wireless communication (Bluetooth module connection \u0026amp; low-power data transfer) Data time synchronization (sensor timestamp correction) 2. Data Processing Module Functions:\nFiltering \u0026amp; noise reduction (minimizing sensor errors and environmental interference) Calculation of joint angles, motion trajectories, velocity, and acceleration Data interpolation and smoothing (Kalman filter) Key Technologies:\nSignal processing (Kalman filter, moving average filter) Mathematical modeling (Euler angle conversion, kinematics computation) Optimization algorithms (noise reduction, precision enhancement) 3. Data Storage Module Functions:\nLocal \u0026amp; cloud storage of patient rehabilitation data Maintenance of historical data for trend analysis \u0026amp; forecasting Fast data retrieval (search by time, recovery progress) Key Technologies:\nDatabase storage (SQLite / Firebase / cloud storage) Data indexing (improving query efficiency) Data synchronization (ensuring consistency between local \u0026amp; cloud data) 4. Recovery Analysis \u0026amp; Prediction Module Functions:\nCalculation of patient recovery progress (comparison with normal recovery curves) AI-based prediction (forecasting future recovery trends based on historical data) Generation of personalized reports (rehabilitation data visualization) Key Technologies:\nMachine learning (linear regression / ARIMA time series prediction) Statistical analysis (mean, standard deviation, recovery trends) Data visualization (Matplotlib / D3.js for chart rendering) 5. Rehabilitation Training Recommendation Module Functions:\nPersonalized rehabilitation training plan based on the patient’s current data Video / GIF demonstrations of rehabilitation exercises Recording training effectiveness to optimize future plans Key Technologies:\nAI recommendation algorithms (matching optimal training plans to user data) Video / animation playback (embedding training demonstration videos) User feedback system (patient feedback after training \u0026amp; adaptive adjustments) 6. User Interface \u0026amp; Mobile App Module Functions:\nIntuitive display of real-time motion data Presentation of rehabilitation progress, training plans, and AI predictions Remote data sharing functionality (allowing doctors to monitor patient data) Key Technologies:\nCross-platform development (Flutter / React Native / Android / iOS) Data visualization (ECharts / Chart.js) Remote data access (RESTful API / WebSocket) Module Relationships 1 [Data Collection] → [Data Processing] → [Data Storage] → [Recovery Analysis \u0026amp; Prediction] → [Rehabilitation Training Recommendation] → [User Interface \u0026amp; Mobile App] ","date":"2025-03-18T00:00:00Z","image":"http://localhost:1313/Group_website/p/%E9%A1%B9%E7%9B%AE%E7%94%A8%E4%BE%8B%E5%9B%BE/%E9%A1%B9%E7%9B%AE%E7%94%A8%E4%BE%8B%E5%9B%BE_hu5758844009908307626.png","permalink":"http://localhost:1313/Group_website/p/%E9%A1%B9%E7%9B%AE%E7%94%A8%E4%BE%8B%E5%9B%BE/","title":"Project Use Case Diagram and Module Division"},{"content":"组员： 21220121陈子恒（组长） 21221128应宇椽 21220415杨子强 55220314邓琦\n","date":"2025-03-09T00:00:00Z","image":"http://localhost:1313/Group_website/p/name_list/02227-2559485279-best-_hu3094765077789940008.png","permalink":"http://localhost:1313/Group_website/p/name_list/","title":"Member list"}]